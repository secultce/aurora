name: Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  code-style:
    name: Run PHP-CS-Fixer
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: erkenes/php-cs-fixer-action@main
        with:
          args: '--dry-run --diff -vvv'

  php-unit:
    name: Run PHPUnit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Start the aurora
        run: docker compose up -d --build

      - name: Install dependencies
        run: docker compose exec --user root php composer install

      - name: Generate public/private keys for use in your application.
        run: docker compose exec --user root php bin/console lexik:jwt:generate-keypair

      - name: Give permissions for var
        run: sudo chmod -R 777 var/

      - name: Give permissions for assets/uploads
        run: chmod -R 777 assets/uploads

      - name: Create the phpunit.xml
        run: docker compose exec --user root php cp phpunit.xml.dist phpunit.xml

      - name: Run migrations
        run: docker compose exec php bin/console d:m:migrate -n

      - name: Run fixtures
        run: docker compose exec php bin/console d:f:l -n --purge-exclusions=city --purge-exclusions=state

      - name: Start the PHPUnit
        run: docker compose exec php bin/paratest --no-coverage

  cypress-run:
    name: Run Cypress
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Start the aurora
        run: docker compose up -d --build

      - name: Install application dependencies
        run: docker compose exec --user root php composer install

      - name: Generate public/private keys for use in your application.
        run: docker compose exec --user root php bin/console lexik:jwt:generate-keypair

      - name: Give permissions for var
        run: sudo chmod -R 777 var/

      - name: Create storage and give permissions
        run: mkdir storage && chmod -R 777 storage

      - name: Run generate mongodb proxies
        run: docker compose exec --user root php bin/console doctrine:mongodb:generate:proxie

      - name: Run migrations
        run: docker compose exec --user root php bin/console d:m:migrate -n

      - name: Run fixtures
        run: docker compose exec --user root php bin/console d:f:l -n --purge-exclusions=city --purge-exclusions=state

      - name: Install frontend dependencies
        run: docker compose exec --user root php bin/console importmap:install

      - name: Compile frontend dependencies
        run: docker compose exec --user root php bin/console asset-map:compile

      - name: Run cypress
        run: docker compose run --rm cypress