name: Tests with coverage

on:
  push:
    branches:
      - main

jobs:
  code-coverage:
    name: Run PHPUnit with coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Start the aurora
        run: docker compose up -d --build

      - name: Install dependencies
        run: docker compose exec --user root php composer install

      - name: Generate public/private keys for use in your application.
        run: docker compose exec --user root php bin/console lexik:jwt:generate-keypair

      - name: Give permissions for var
        run: sudo chmod -R 777 var/

      - name: Give permissions for assets/uploads
        run: chmod -R 777 assets/uploads

      - name: Create the phpunit.xml
        run: docker compose exec --user root php cp phpunit.xml.dist phpunit.xml

      - name: Run migrations
        run: docker compose exec php bin/console d:m:migrate -n

      - name: Run fixtures
        run: docker compose exec php bin/console d:f:l -n --purge-exclusions=city --purge-exclusions=state

      - name: Start the PHPUnit
        run: docker compose exec --user root -T php bash -c "php -d memory_limit=512M bin/paratest --coverage-clover=coverage.xml"

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}